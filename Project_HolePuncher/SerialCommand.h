#ifndef _SERIAL_COMMAND_H_
#define _SERIAL_COMMAND_H_

#include <Arduino.h>
#include "PuncherScheduler.h"
#include <CRC8.h>

typedef union
{
    double number;
    byte doubleBytes[8];
} DOUBLEUNION_t;

const PROGMEM byte ClientSuccessResp[16] = {0xE0, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31};
const PROGMEM byte DataTransDisabledResp[16] = {0xE0, 0x10, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC};
const PROGMEM byte NoHoleDataResp[16] = {0xE0, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16};
const PROGMEM byte UnknownCommandResp[16] = {0xE0, 0xE0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50};
const PROGMEM byte DataXOutOfRangeResp[16] = {0xE0, 0xE1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF3};
const PROGMEM byte EncoderErrorResp[16] = {0xE0, 0xE2, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60};
const PROGMEM byte ZJamErrorResp[16] = {0xE0, 0xE2, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4};
const PROGMEM byte CRCErrorResp[16] = {0xEF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1};
const PROGMEM byte PuncherBusyResp[16] = {0xE0, 0xE0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69};
const PROGMEM byte SerialCommandDisabledResp[16] = {0xE0, 0xE0, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8D};
const PROGMEM byte WifiCommandDisabledResp[16] = {0xE0, 0xE0, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19};
const PROGMEM byte EncoderNotDetectedResp[16] = {0xE0, 0xE2, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11};
const PROGMEM byte HeartBeat[16] = {0xE0, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDA};

extern byte* HeartBeatPackage;

byte *handleSerialCommand(byte *buffer, int len);
byte *handleWifiCommand(byte *buffer, int len);
byte *handle_Resend();
bool checkCRC(byte *buffer, int len);
byte *handle_Command(byte *buffer, int len);
byte *handle_UnknownCommand();
byte *handle_StatusQuery();
byte *handle_StartDataTrans();
byte *handle_EndDataTrans();
byte *handle_DataReceive(byte *buffer, int len);
byte *handle_DataTransDisabled();
byte *handle_StartPunch();
byte *handle_SerialCommandDisable();
byte *handle_WifiCommandDisable();

void disableSerialCommand();
void disableWifiCommand();
bool isSerialCommandEnabled();
bool isWifiCommandEnabled();

#endif
